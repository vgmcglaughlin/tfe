{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.scss","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/app.routes.ts","webpack:///./src/app/common/dataset.service.ts","webpack:///./src/app/common/index.ts","webpack:///./src/app/common/member.service.ts","webpack:///./src/app/consensus-builder/consensus-builder/consensus-builder.component.html","webpack:///./src/app/consensus-builder/consensus-builder/consensus-builder.component.scss","webpack:///./src/app/consensus-builder/consensus-builder/consensus-builder.component.ts","webpack:///./src/app/consensus-builder/dataset-selector/dataset-selector.component.html","webpack:///./src/app/consensus-builder/dataset-selector/dataset-selector.component.scss","webpack:///./src/app/consensus-builder/dataset-selector/dataset-selector.component.ts","webpack:///./src/app/consensus-builder/index.ts","webpack:///./src/app/consensus-builder/participant-prompt/participant-prompt.component.html","webpack:///./src/app/consensus-builder/participant-prompt/participant-prompt.component.scss","webpack:///./src/app/consensus-builder/participant-prompt/participant-prompt.component.ts","webpack:///./src/app/login/index.ts","webpack:///./src/app/login/login.component.html","webpack:///./src/app/login/login.component.scss","webpack:///./src/app/login/login.component.ts","webpack:///./src/app/profile/index.ts","webpack:///./src/app/profile/profile.component.html","webpack:///./src/app/profile/profile.component.scss","webpack:///./src/app/profile/profile.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"<div class=\\\"example-container\\\" [class.example-is-mobile]=\\\"mobileQuery.matches\\\">\\n  <mat-toolbar color=\\\"primary\\\" class=\\\"example-toolbar\\\">\\n    <button mat-icon-button (click)=\\\"snav.toggle()\\\"><mat-icon>menu</mat-icon></button>\\n    <h1 class=\\\"example-app-name\\\">TFE</h1>\\n  </mat-toolbar>\\n\\n  <mat-sidenav-container class=\\\"example-sidenav-container\\\"\\n                         [style.marginTop.px]=\\\"mobileQuery.matches ? 56 : 0\\\">\\n    <mat-sidenav #snav [mode]=\\\"mobileQuery.matches ? 'over' : 'side'\\\"\\n                 [fixedInViewport]=\\\"mobileQuery.matches\\\" fixedTopGap=\\\"56\\\">\\n      <mat-nav-list>\\n        <a mat-list-item routerLink=\\\"/consensus-builder/datasets\\\">Consensus Builder</a>\\n        <ng-container [ngSwitch]=\\\"memberService.isLoggedIn()\\\">\\n          <a *ngSwitchCase=\\\"true\\\" mat-list-item routerLink=\\\"/profile\\\">Profile</a>\\n          <a *ngSwitchCase=\\\"false\\\" mat-list-item routerLink=\\\"/login\\\">Login</a>\\n        </ng-container>\\n      </mat-nav-list>\\n    </mat-sidenav>\\n\\n    <mat-sidenav-content>\\n      <router-outlet></router-outlet>\\n    </mat-sidenav-content>\\n  </mat-sidenav-container>\\n</div>\\n\"","module.exports = \".example-container {\\n  display: flex;\\n  flex-direction: column;\\n  position: absolute;\\n  top: 0;\\n  bottom: 0;\\n  left: 0;\\n  right: 0; }\\n\\n.example-is-mobile .example-toolbar {\\n  position: fixed;\\n  /* Make sure the toolbar will stay on top of the content as it scrolls past. */\\n  z-index: 2; }\\n\\n.example-is-mobile .example-sidenav-container {\\n  /* When the sidenav is fixed, don't constrain the height of the sidenav container. This allows the\\n       `<body>` to be our scrolling element for mobile layouts. */\\n  flex: 1 0 auto; }\\n\\nh1.example-app-name {\\n  margin-left: 8px; }\\n\\n.example-sidenav-container {\\n  /* When the sidenav is not fixed, stretch the sidenav container to fill the available space. This\\n     causes `<mat-sidenav-content>` to act as our scrolling element for desktop layouts. */\\n  flex: 1; }\\n\\nmat-sidenav-content {\\n  overflow-x: hidden;\\n  padding: 1rem; }\\n\\nmat-sidenav-content p {\\n    padding: 1rem 1rem 0;\\n    margin: 0; }\\n\\nmat-sidenav-content p:last-child {\\n      padding-bottom: 1rem; }\\n\"","import { MediaMatcher } from '@angular/cdk/layout';\nimport { ChangeDetectorRef, Component, OnDestroy, OnInit } from '@angular/core';\nimport { MemberService } from './common';\n\n@Component({\n  selector: 'tfe-root',\n  templateUrl: 'app.component.html',\n  styleUrls: [ 'app.component.scss' ],\n})\nexport class AppComponent implements OnInit, OnDestroy {\n  mobileQuery: MediaQueryList;\n\n  private _mobileQueryListener: () => void;\n\n  constructor(\n    changeDetectorRef: ChangeDetectorRef,\n    media: MediaMatcher,\n    public memberService: MemberService,\n  ) {\n    this.mobileQuery = media.matchMedia('(max-width: 600px)');\n    this._mobileQueryListener = () => changeDetectorRef.detectChanges();\n    this.mobileQuery.addListener(this._mobileQueryListener);\n\n    console.log('isLoggedIn', memberService.isLoggedIn());\n  }\n\n  ngOnInit(): void {\n    gapi.load('auth2', () => {\n      gapi.auth2.init({});\n    });\n  }\n\n  ngOnDestroy(): void {\n    this.mobileQuery.removeListener(this._mobileQueryListener);\n  }\n}\n","import { CdkTableModule } from '@angular/cdk/table';\nimport { HttpClientModule } from '@angular/common/http';\nimport { NgModule } from '@angular/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport {\n  MatAutocompleteModule,\n  MatBadgeModule,\n  MatBottomSheetModule,\n  MatButtonModule,\n  MatButtonToggleModule,\n  MatCardModule,\n  MatCheckboxModule,\n  MatChipsModule,\n  MatDatepickerModule,\n  MatDialogModule,\n  MatDividerModule,\n  MatExpansionModule,\n  MatGridListModule,\n  MatIconModule,\n  MatInputModule,\n  MatListModule,\n  MatMenuModule,\n  MatNativeDateModule,\n  MatPaginatorModule,\n  MatProgressBarModule,\n  MatProgressSpinnerModule,\n  MatRadioModule,\n  MatRippleModule,\n  MatSelectModule,\n  MatSidenavModule,\n  MatSliderModule,\n  MatSlideToggleModule,\n  MatSnackBarModule,\n  MatSortModule,\n  MatStepperModule,\n  MatTableModule,\n  MatTabsModule,\n  MatToolbarModule,\n  MatTooltipModule,\n  MatTreeModule,\n} from '@angular/material';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { RouterModule } from '@angular/router';\n\nimport { AppComponent } from './app.component';\nimport { ROUTES } from './app.routes';\nimport {\n  ConsensusBuilderComponent,\n  DatasetSelectorComponent,\n  ParticipantPromptComponent,\n} from './consensus-builder';\nimport { LoginComponent } from './login';\nimport { ProfileComponent } from './profile/profile.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    ConsensusBuilderComponent,\n    DatasetSelectorComponent,\n    ParticipantPromptComponent,\n    LoginComponent,\n    ProfileComponent,\n  ],\n  entryComponents: [\n    ParticipantPromptComponent,\n  ],\n  imports: [\n    BrowserModule,\n    BrowserAnimationsModule,\n    FormsModule,\n    RouterModule.forRoot(ROUTES),\n    HttpClientModule,\n    MatNativeDateModule,\n    ReactiveFormsModule,\n    CdkTableModule,\n    MatAutocompleteModule,\n    MatBadgeModule,\n    MatBottomSheetModule,\n    MatButtonModule,\n    MatButtonToggleModule,\n    MatCardModule,\n    MatCheckboxModule,\n    MatChipsModule,\n    MatStepperModule,\n    MatDatepickerModule,\n    MatDialogModule,\n    MatDividerModule,\n    MatExpansionModule,\n    MatGridListModule,\n    MatIconModule,\n    MatInputModule,\n    MatListModule,\n    MatMenuModule,\n    MatNativeDateModule,\n    MatPaginatorModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatRadioModule,\n    MatRippleModule,\n    MatSelectModule,\n    MatSidenavModule,\n    MatSliderModule,\n    MatSlideToggleModule,\n    MatSnackBarModule,\n    MatSortModule,\n    MatTableModule,\n    MatTabsModule,\n    MatToolbarModule,\n    MatTooltipModule,\n    MatTreeModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import {\n  ConsensusBuilderComponent,\n  DatasetSelectorComponent,\n} from './consensus-builder';\nimport { LoginComponent } from './login';\nimport { ProfileComponent } from './profile';\n\nexport const ROUTES = [\n  {\n    path: '',\n    pathMatch: 'full',\n    redirectTo: '/consensus-builder/datasets',\n  },\n  {\n    path: 'login',\n    component: LoginComponent,\n  },\n  {\n    path: 'profile',\n    component: ProfileComponent,\n  },\n  {\n    path: 'consensus-builder/datasets',\n    component: DatasetSelectorComponent,\n  },\n  {\n    path: 'consensus-builder/datasets/:id',\n    component: ConsensusBuilderComponent,\n  },\n];\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { environment } from '../../environments/environment';\nimport { Dataset } from './models/dataset';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DatasetService {\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  all(): Observable<Dataset[]> {\n    return this.http.get<Dataset[]>(`${environment.apiBase}/datasets`);\n  }\n\n  get(id: string): Observable<Dataset> {\n    return this.http.get<Dataset>(`${environment.apiBase}/datasets/${id}`);\n  }\n}\n","export * from './models/dataset';\nexport * from './models/member';\nexport * from './dataset.service';\nexport * from './member.service';\n","import { Injectable, NgZone } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\nimport { tap } from 'rxjs/operators';\n\nimport { Member } from './models/member';\nimport { environment } from '../../environments/environment';\n\ninterface LoginResponse {\n  id: string;\n  ttl: number;\n  created: Date;\n  userId: string;\n}\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MemberService {\n\n  private token: string|null = null;\n\n  constructor(\n    private http: HttpClient,\n  ) { }\n\n  login(googleUser) {\n    const user: any = {};\n\n    // ((u, p) => {\n    //   u.id = p.getId();\n    //   u.name = p.getName();\n    //   u.email = p.getEmail();\n    //   u.imageUrl = p.getImageUrl();\n    //   u.givenName = p.getGivenName();\n    //   u.familyName = p.getFamilyName();\n    // })(user, googleUser.getBasicProfile());\n\n    ((u, r) => {\n      u.token = r.id_token;\n    })(user, googleUser.getAuthResponse());\n\n    return this.http.post(`${environment.apiBase}/members/token-login`, {\n      token: user.token,\n    }).pipe(\n      tap((res: LoginResponse) => this.token = res.id),\n    );\n  };\n\n  logout() {\n    return this.http.post(`${environment.apiBase}/members/logout?access_token=${this.token}`, {}).pipe(\n      tap(() => {\n        this.token = null;\n        gapi.auth2.getAuthInstance().signOut();\n      }),\n    );\n  }\n\n  profile(): Observable<Member> {\n    return this.http.get<Member>(`${environment.apiBase}/members/me?access_token=${this.token}`);\n  }\n\n  isLoggedIn(): boolean {\n    return !!(this.token && gapi.auth2 && gapi.auth2.getAuthInstance().isSignedIn.get());\n  }\n}\n","module.exports = \"<div>\\n  <div class=\\\"header\\\">\\n    <h1>Consensus Builder</h1>\\n    <span>\\n      <button mat-button color=\\\"warn\\\" (click)=\\\"reset()\\\">Reset</button>\\n    </span>\\n  </div>\\n  <div *ngIf=\\\"!allSelectionsMade\\\">\\n    <h2>Make Selections</h2>\\n    <h3>Player {{ participantIndex + 1 }}</h3>\\n    <p>Item {{ itemIndex + 1 }}/{{ items.length }}</p>\\n    <mat-progress-bar\\n        color=\\\"primary\\\"\\n        mode=\\\"determinate\\\"\\n        [value]=\\\"itemIndex / items.length * 100\\\">\\n    </mat-progress-bar>\\n    <div class=\\\"items\\\" [style.height]=\\\"maxCardHeight\\\">\\n      <mat-card #itemCard class=\\\"item-card\\\" *ngFor=\\\"let item of items; index as i\\\"\\n          [class.active]=\\\"i == itemIndex\\\"\\n          [class.previous]=\\\"i < itemIndex\\\"\\n          [class.next]=\\\"i > itemIndex\\\">\\n        <mat-card-header>\\n          <mat-card-title>{{ item.data.title }}</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <div class=\\\"content\\\">\\n            <img [src]=\\\"item.data.thumbnail\\\">\\n            <div class=\\\"description\\\">\\n              <p>{{ item.data.description }}</p>\\n              <a mat-button rel=\\\"noopener\\\" target=\\\"blank\\\" [href]=\\\"item.data.externalLink\\\">\\n                Link <mat-icon>open_in_new</mat-icon>\\n              </a>\\n            </div>\\n          </div>\\n        </mat-card-content>\\n        <mat-card-actions *ngIf=\\\"i == itemIndex\\\">\\n          <button mat-button color=\\\"primary\\\" (click)=\\\"makeSelection(item, true)\\\">\\n            <mat-icon>thumb_up</mat-icon>\\n          </button>\\n          <button mat-button color=\\\"warn\\\" (click)=\\\"makeSelection(item, false)\\\">\\n            <mat-icon>thumb_down</mat-icon>\\n          </button>\\n        </mat-card-actions>\\n      </mat-card>\\n    </div>\\n    <div class=\\\"attribution\\\" *ngIf=\\\"selectedDataset\\\">\\n      <p>{{ selectedDataset.attribution.text }}</p>\\n      <img [src]=\\\"selectedDataset.attribution.logo\\\">\\n    </div>\\n  </div>\\n  <div *ngIf=\\\"allSelectionsMade\\\">\\n    <h2>Selection Report</h2>\\n    <!-- TODO better to show the percent matched between participants? -->\\n    <h3>Selection Rate: {{ matches.length / items.length * 100 }}%</h3>\\n    <button mat-button (click)=\\\"continue()\\\" [disabled]=\\\"!canContinue()\\\">Continue</button>\\n    <div class=\\\"matches\\\">\\n      <mat-card class=\\\"item-card\\\" *ngFor=\\\"let match of matches\\\">\\n        <mat-card-header>\\n          <mat-card-title>{{ match.data.title }}</mat-card-title>\\n        </mat-card-header>\\n        <mat-card-content>\\n          <div class=\\\"content\\\">\\n            <img [src]=\\\"match.data.thumbnail\\\">\\n            <p>{{ match.data.description }}</p>\\n          </div>\\n        </mat-card-content>\\n      </mat-card>\\n    </div>\\n  </div>\\n</div>\\n\"","module.exports = \".header {\\n  align-items: center;\\n  display: flex;\\n  justify-content: space-between; }\\n\\nmat-progress-bar {\\n  margin-bottom: 2rem; }\\n\\n.item-card .description {\\n  width: 300px; }\\n\\n.item-card .description mat-icon {\\n    margin-left: 1rem; }\\n\\n.item-card .content {\\n  display: flex; }\\n\\n.item-card .content img {\\n    margin-right: 1rem; }\\n\\n.matches .item-card {\\n  margin-bottom: 2rem;\\n  margin-right: 2rem; }\\n\\n.matches {\\n  display: flex;\\n  flex-flow: wrap; }\\n\\n.items {\\n  position: relative; }\\n\\n.items .item-card {\\n    position: absolute;\\n    transition: all linear 300ms;\\n    top: 0; }\\n\\n.items .item-card.active {\\n      left: 50%;\\n      -webkit-transform: translateX(-50%);\\n              transform: translateX(-50%); }\\n\\n.items .item-card.previous {\\n      left: -110%;\\n      -webkit-transform: translateX(-100%);\\n              transform: translateX(-100%); }\\n\\n.items .item-card.next {\\n      left: 110%;\\n      -webkit-transform: translateX(0%);\\n              transform: translateX(0%); }\\n\\n.attribution {\\n  display: flex;\\n  justify-content: space-around;\\n  margin: 1rem 0; }\\n\\n.attribution img {\\n    height: 40px; }\\n\"","import { AfterViewInit, Component, OnInit, QueryList, ViewChildren, ElementRef,  } from '@angular/core';\nimport { MatDialog, MatDialogRef, MAT_DIALOG_DATA, MatCard } from '@angular/material';\n\nimport { ParticipantPromptComponent } from '../participant-prompt/participant-prompt.component';\nimport { DatasetService, Dataset } from '../../common';\nimport { ActivatedRouteSnapshot, ActivatedRoute } from '@angular/router';\n\nconst NUM_PARTICIPANTS = 2;\n\n@Component({\n  selector: 'tfe-consensus-builder',\n  templateUrl: './consensus-builder.component.html',\n  styleUrls: ['./consensus-builder.component.scss']\n})\nexport class ConsensusBuilderComponent implements AfterViewInit, OnInit {\n\n  @ViewChildren(MatCard, { read: ElementRef }) itemCards: QueryList<any>;\n\n  selectedDataset: Dataset | null = null;\n  participantIndex = 0;\n  itemIndex = 0;\n  allSelectionsMade = false;\n  roundIndex = 0;\n  items = [];\n  maxCardHeight = 'auto';\n\n  constructor(\n    private dialog: MatDialog,\n    private datasetService: DatasetService,\n    private activatedRoute: ActivatedRoute,\n  ) {\n    this.openDialog();\n    this.datasetService.get(this.activatedRoute.snapshot.params.id).subscribe(dataset => {\n      this.selectedDataset = dataset;\n      this.reset();\n    });\n  }\n\n  get matches() {\n    return this.items.filter(item => {\n      return item.selections.every(selection => selection === true);\n    });\n  }\n\n  ngOnInit() {\n\n  }\n\n  ngAfterViewInit() {\n    this.itemCards.changes.subscribe(queryList => {\n      this.calculateMaxCardHeight();\n    });\n  }\n\n  calculateMaxCardHeight() {\n    setTimeout(() => {\n      this.maxCardHeight = this.itemCards.map(itemCard => {\n        return itemCard.nativeElement.clientHeight;\n      }).reduce((height, prevMaxHeight) => {\n        return Math.max(height, prevMaxHeight);\n      }, 0) + 'px';\n    }, 0);\n  }\n\n  reset() {\n    this.participantIndex = 0;\n    this.itemIndex = 0;\n    this.allSelectionsMade = false;\n    this.roundIndex = 0;\n\n    this.items = this.selectedDataset.items.map(item => {\n      return {\n        data: item,\n        selections: [],\n      };\n    });\n  }\n\n  continue() {\n    this.participantIndex = 0;\n    this.itemIndex = 0;\n    this.allSelectionsMade = false;\n    this.roundIndex++;\n    this.items = [...this.matches];\n  }\n\n  canContinue() {\n    return this.matches.length > 1;\n  }\n\n  makeSelection(item, value) {\n    item.selections.push(value);\n    this.itemIndex++;\n\n    if (this.itemIndex >= this.items.length) {\n      this.participantIndex++;\n      this.itemIndex = 0;\n\n      if (this.participantIndex >= NUM_PARTICIPANTS) {\n        this.allSelectionsMade = true;\n      } else {\n        this.openDialog();\n      }\n    }\n  }\n\n  private openDialog(): void {\n    const dialogRef = this.dialog.open(ParticipantPromptComponent, {\n      width: '300px',\n      closeOnNavigation: true,\n      data: {\n        participantIndex: this.participantIndex,\n      },\n      disableClose: true,\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed', result);\n    });\n  }\n}\n","module.exports = \"<h1>Select a Dataset</h1>\\n<div class=\\\"datasets\\\">\\n  <mat-card *ngFor=\\\"let dataset of datasets\\\">\\n    <mat-card-header>\\n      <div mat-card-avatar>\\n        <mat-icon>{{ dataset.icon }}</mat-icon>\\n      </div>\\n      <mat-card-title>{{ dataset.title }}</mat-card-title>\\n      <mat-card-subtitle>{{ dataset.subtitle }}</mat-card-subtitle>\\n    </mat-card-header>\\n    <mat-card-content>\\n      <p>{{ dataset.description }}</p>\\n    </mat-card-content>\\n    <mat-card-actions>\\n      <button mat-button color=\\\"primary\\\" [routerLink]=\\\"dataset.id\\\">SELECT</button>\\n    </mat-card-actions>\\n  </mat-card>\\n</div>\\n\"","module.exports = \"mat-card {\\n  max-width: 400px; }\\n\\nmat-icon {\\n  font-size: 2.5rem; }\\n\\n.datasets {\\n  display: flex;\\n  justify-content: center; }\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Dataset, DatasetService } from '../../common';\n\n@Component({\n  selector: 'tfe-dataset-selector',\n  templateUrl: './dataset-selector.component.html',\n  styleUrls: ['./dataset-selector.component.scss']\n})\nexport class DatasetSelectorComponent implements OnInit {\n\n  datasets: Dataset[] = [];\n\n  constructor(\n    private datasetService: DatasetService,\n  ) { }\n\n  ngOnInit() {\n    this.datasetService.all().subscribe(datasets => this.datasets = datasets);\n  }\n\n}\n","export * from './consensus-builder/consensus-builder.component';\nexport * from './dataset-selector/dataset-selector.component';\nexport * from './participant-prompt/participant-prompt.component';\n","module.exports = \"<h1>Ready, Player {{ data.participantIndex + 1 }}</h1>\\n<button mat-button color=\\\"primary\\\" (click)=\\\"dismiss()\\\">LET'S GO!</button>\\n\"","module.exports = \"\"","import { Component, Inject, OnInit } from '@angular/core';\nimport {MatDialog, MatDialogRef, MAT_DIALOG_DATA} from '@angular/material';\n\n@Component({\n  selector: 'tfe-participant-prompt',\n  templateUrl: './participant-prompt.component.html',\n  styleUrls: ['./participant-prompt.component.scss']\n})\nexport class ParticipantPromptComponent implements OnInit {\n\n  constructor(\n    public dialogRef: MatDialogRef<ParticipantPromptComponent>,\n    @Inject(MAT_DIALOG_DATA) public data: any) { }\n\n  ngOnInit() {\n    console.log('dialog ngOnInit', this.data);\n  }\n\n  dismiss(): void {\n    this.dialogRef.close();\n  }\n}\n","export * from './login.component';\n","module.exports = \"<div id=\\\"g-signin2\\\"></div>\\n\"","module.exports = \":host {\\n  display: flex;\\n  justify-content: center; }\\n\"","import { AfterViewInit, Component, NgZone, OnInit, } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MemberService } from '../common';\n\n@Component({\n  selector: 'tfe-login',\n  templateUrl: './login.component.html',\n  styleUrls: ['./login.component.scss'],\n})\nexport class LoginComponent implements OnInit, AfterViewInit {\n\n  constructor(\n    private ngZone: NgZone,\n    private memberService: MemberService,\n    private router: Router,\n  ) {}\n\n  ngOnInit() {\n  }\n\n  ngAfterViewInit() {\n    gapi.signin2.render('g-signin2', {\n      scope: 'profile email',\n      width: 240,\n      height: 50,\n      longtitle: true,\n      theme: 'light',\n      onsuccess: googleUser => {\n        this.ngZone.run(() => {\n          this.memberService.login(googleUser).subscribe(() => this.router.navigate(['./profile']));\n        });\n      },\n    });\n  }\n}\n","export * from './profile.component';\n","module.exports = \"<h1>Profile</h1>\\n<button mat-raised-button color=\\\"warn\\\" (click)=\\\"signOut()\\\">\\n  Sign Out\\n</button>\\n<code>\\n  <pre>{{ member | json }}</pre>\\n</code>\\n\"","module.exports = \"pre {\\n  white-space: pre-wrap; }\\n\"","import { Component, NgZone, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { Member, MemberService } from '../common';\n\n@Component({\n  selector: 'tfe-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.scss']\n})\nexport class ProfileComponent implements OnInit {\n\n  public member: Member | null = null;\n\n  constructor(\n    private ngZone: NgZone,\n    private router: Router,\n    private memberService: MemberService,\n  ) { }\n\n  ngOnInit() {\n    if (!this.memberService.isLoggedIn()) {\n      this.router.navigate(['./login']);\n    } else {\n      this.memberService.profile().subscribe(member => this.member = member);\n    }\n  }\n\n  signOut() {\n    this.ngZone.run(() => {\n      this.memberService.logout().subscribe(() => this.router.navigate(['./login']));\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiBase: 'http://localhost:3000/api',\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nimport 'hammerjs';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}